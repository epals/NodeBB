"use strict";define("quill-emoji",["quill"],e=>{const t={table:{}};const i=e.import("formats/image");const s=["alt","class"];class n extends i{static create(e){const t=super.create(e.src);t.setAttribute("class",e.class);return t}static formats(e){return s.reduce((t,i)=>{if(e.hasAttribute(i)){t[i]=e.getAttribute(i)}return t},{})}static format(e,t){if(s.includes(e)){if(t){this.domNode.setAttribute(e,t)}else{this.domNode.removeAttribute(e)}}else{super.format(e,t)}}}n.blotName="emoji";e.register(n);t.enable=function(e){if(!Object.keys(t.table).length){socket.emit("plugins.composer-quill.getEmojiTable",{},(i,s)=>{if(i){app.alertError(i.message)}if(s!==null){t.table=s;e.on("text-change",t.convert.bind(e))}})}};t.convert=function(e){const i=this;const s=i.getContents();const n=/:([\w+-]+):/g;if(!e||e.ops.some(e=>e.insert&&(e.insert===":"||String(e.insert).endsWith(":")||String(e.insert).endsWith(": \n")))){s.reduce((e,s)=>{let r=n.exec(s.insert);let o;let a;while(r!==null){a=t.table[r[1]];if(a){o=[{insert:{emoji:{url:`${config.relative_path}/plugins/nodebb-plugin-emoji/emoji/${a.pack}/${a.image}?${app.cacheBuster}`,class:`not-responsive emoji emoji-${a.pack} emoji--${a.name}`}},attributes:{alt:a.character}}];if(r[0].length){o.unshift({delete:r[0].length})}if(e+r.index){o.unshift({retain:e+r.index})}i.updateContents({ops:o})}n.lastIndex=e+r.index+1;r=n.exec(s.insert)}e+=s.insert.length||1;return e},0)}};return t});
//# sourceMappingURL=emoji.js.map