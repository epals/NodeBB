{"version":3,"sources":["public/src/client/unread.js"],"names":["define","topicSelect","components","topicList","categorySelector","Unread","watchStates","ignoring","notwatching","watching","init","app","enterRoom","handleMarkRead","updateUnreadTopicCount","ajaxify","data","selectedFilter","url","topicCount","markAllRead","socket","emit","err","alertError","message","alertSuccess","$","empty","addClass","removeClass","markSelectedRead","tids","getSelectedTids","length","doneRemovingTids","markCategoryRead","cid","getCategoryTids","get","each","push","this","attr","selector","onSelect","category","selectCategory","parseInt","selectCategoryLabel","localCategories","name","icon","removeTids","children","i","remove","count","utils","isNumber","config","relative_path","toggleClass","initUnreadTopics","unreadTopics","user","unreadData","onNewPost","posts","post","uid","topic","isFollowing","categoryWatchState","tid","new","watched","unreplied","markTopicsUnread","increaseUnreadCount","isNewTopic","isMain","isUnreplied","postcount","filter","unreadUrl","newCount","window","on","template","forEach","removeListener","updateUnreadCounters","unreadTopicCount","unreadNewTopicCount","unreadWatchedTopicCount","unreadUnrepliedTopicCount"],"mappings":"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","file":"public/src/client/unread.js","sourcesContent":["'use strict';\n\n\ndefine('forum/unread', [\n\t'topicSelect', 'components', 'topicList', 'categorySelector',\n], function (topicSelect, components, topicList, categorySelector) {\n\tvar Unread = {};\n\n\tvar watchStates = {\n\t\tignoring: 1,\n\t\tnotwatching: 2,\n\t\twatching: 3,\n\t};\n\n\tUnread.init = function () {\n\t\tapp.enterRoom('unread_topics');\n\n\t\thandleMarkRead();\n\n\t\ttopicList.init('unread');\n\n\t\tupdateUnreadTopicCount('/' + ajaxify.data.selectedFilter.url, ajaxify.data.topicCount);\n\t};\n\n\tfunction handleMarkRead() {\n\t\tfunction markAllRead() {\n\t\t\tsocket.emit('topics.markAllRead', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tapp.alertSuccess('[[unread:topics_marked_as_read.success]]');\n\n\t\t\t\t$('[component=\"category\"]').empty();\n\t\t\t\t$('[component=\"pagination\"]').addClass('hidden');\n\t\t\t\t$('#category-no-topics').removeClass('hidden');\n\t\t\t\t$('.markread').addClass('hidden');\n\t\t\t});\n\t\t}\n\n\t\tfunction markSelectedRead() {\n\t\t\tvar tids = topicSelect.getSelectedTids();\n\t\t\tif (!tids.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsocket.emit('topics.markAsRead', tids, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tdoneRemovingTids(tids);\n\t\t\t});\n\t\t}\n\n\t\tfunction markCategoryRead(cid) {\n\t\t\tfunction getCategoryTids(cid) {\n\t\t\t\tvar tids = [];\n\t\t\t\tcomponents.get('category/topic', 'cid', cid).each(function () {\n\t\t\t\t\ttids.push($(this).attr('data-tid'));\n\t\t\t\t});\n\t\t\t\treturn tids;\n\t\t\t}\n\t\t\tvar tids = getCategoryTids(cid);\n\n\t\t\tsocket.emit('topics.markCategoryTopicsRead', cid, function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\n\t\t\t\tdoneRemovingTids(tids);\n\t\t\t});\n\t\t}\n\n\t\tvar selector = categorySelector.init($('[component=\"category-selector\"]'), {\n\t\t\tonSelect: function (category) {\n\t\t\t\tselector.selectCategory(0);\n\t\t\t\tif (category.cid === 'all') {\n\t\t\t\t\tmarkAllRead();\n\t\t\t\t} else if (category.cid === 'selected') {\n\t\t\t\t\tmarkSelectedRead();\n\t\t\t\t} else if (parseInt(category.cid, 10) > 0) {\n\t\t\t\t\tmarkCategoryRead(category.cid);\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectCategoryLabel: ajaxify.data.selectCategoryLabel || '[[unread:mark_as_read]]',\n\t\t\tlocalCategories: [\n\t\t\t\t{\n\t\t\t\t\tcid: 'selected',\n\t\t\t\t\tname: '[[unread:selected]]',\n\t\t\t\t\ticon: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcid: 'all',\n\t\t\t\t\tname: '[[unread:all]]',\n\t\t\t\t\ticon: '',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tfunction doneRemovingTids(tids) {\n\t\tremoveTids(tids);\n\n\t\tapp.alertSuccess('[[unread:topics_marked_as_read.success]]');\n\n\t\tif (!$('[component=\"category\"]').children().length) {\n\t\t\t$('#category-no-topics').removeClass('hidden');\n\t\t\t$('.markread').addClass('hidden');\n\t\t}\n\t}\n\n\tfunction removeTids(tids) {\n\t\tfor (var i = 0; i < tids.length; i += 1) {\n\t\t\tcomponents.get('category/topic', 'tid', tids[i]).remove();\n\t\t}\n\t}\n\n\tfunction updateUnreadTopicCount(url, count) {\n\t\tif (!utils.isNumber(count)) {\n\t\t\treturn;\n\t\t}\n\n\t\t$('a[href=\"' + config.relative_path + url + '\"].navigation-link i')\n\t\t\t.toggleClass('unread-count', count > 0)\n\t\t\t.attr('data-content', count > 99 ? '99+' : count);\n\t}\n\n\tUnread.initUnreadTopics = function () {\n\t\tvar unreadTopics = app.user.unreadData;\n\n\t\tfunction onNewPost(data) {\n\t\t\tif (data && data.posts && data.posts.length && unreadTopics) {\n\t\t\t\tvar post = data.posts[0];\n\t\t\t\tif (parseInt(post.uid, 10) === parseInt(app.user.uid, 10) ||\n\t\t\t\t\t(!post.topic.isFollowing && post.categoryWatchState !== watchStates.watching)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar tid = post.topic.tid;\n\t\t\t\tif (!unreadTopics[''][tid] || !unreadTopics.new[tid] ||\n\t\t\t\t\t!unreadTopics.watched[tid] || !unreadTopics.unreplied[tid]) {\n\t\t\t\t\tmarkTopicsUnread(tid);\n\t\t\t\t}\n\n\t\t\t\tif (!unreadTopics[''][tid]) {\n\t\t\t\t\tincreaseUnreadCount('');\n\t\t\t\t\tunreadTopics[''][tid] = true;\n\t\t\t\t}\n\t\t\t\tvar isNewTopic = post.isMain && parseInt(post.uid, 10) !== parseInt(app.user.uid, 10);\n\t\t\t\tif (isNewTopic && !unreadTopics.new[tid]) {\n\t\t\t\t\tincreaseUnreadCount('new');\n\t\t\t\t\tunreadTopics.new[tid] = true;\n\t\t\t\t}\n\t\t\t\tvar isUnreplied = parseInt(post.topic.postcount, 10) <= 1;\n\t\t\t\tif (isUnreplied && !unreadTopics.unreplied[tid]) {\n\t\t\t\t\tincreaseUnreadCount('unreplied');\n\t\t\t\t\tunreadTopics.unreplied[tid] = true;\n\t\t\t\t}\n\n\t\t\t\tif (post.topic.isFollowing && !unreadTopics.watched[tid]) {\n\t\t\t\t\tincreaseUnreadCount('watched');\n\t\t\t\t\tunreadTopics.watched[tid] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction increaseUnreadCount(filter) {\n\t\t\tvar unreadUrl = '/unread' + (filter ? '?filter=' + filter : '');\n\t\t\tvar newCount = 1 + parseInt($('a[href=\"' + config.relative_path + unreadUrl + '\"].navigation-link i').attr('data-content'), 10);\n\t\t\tupdateUnreadTopicCount(unreadUrl, newCount);\n\t\t}\n\n\t\tfunction markTopicsUnread(tid) {\n\t\t\t$('[data-tid=\"' + tid + '\"]').addClass('unread');\n\t\t}\n\n\t\t$(window).on('action:ajaxify.end', function () {\n\t\t\tif (ajaxify.data.template.topic) {\n\t\t\t\t['', 'new', 'watched', 'unreplied'].forEach(function (filter) {\n\t\t\t\t\tdelete unreadTopics[filter][ajaxify.data.tid];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tsocket.removeListener('event:new_post', onNewPost);\n\t\tsocket.on('event:new_post', onNewPost);\n\n\t\tsocket.removeListener('event:unread.updateCount', updateUnreadCounters);\n\t\tsocket.on('event:unread.updateCount', updateUnreadCounters);\n\t};\n\n\tfunction updateUnreadCounters(data) {\n\t\tupdateUnreadTopicCount('/unread', data.unreadTopicCount);\n\t\tupdateUnreadTopicCount('/unread?filter=new', data.unreadNewTopicCount);\n\t\tupdateUnreadTopicCount('/unread?filter=watched', data.unreadWatchedTopicCount);\n\t\tupdateUnreadTopicCount('/unread?filter=unreplied', data.unreadUnrepliedTopicCount);\n\t}\n\n\treturn Unread;\n});\n"]}